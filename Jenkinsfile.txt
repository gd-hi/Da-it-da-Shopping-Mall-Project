pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                // Maven을 사용하여 .jar 파일 빌드
                sh 'mvn clean package'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Docker 이미지 빌드, "myapp"는 예시이며 적절한 이미지 이름으로 변경해야 함
                    docker.build("DatidaJenkinsDockerapp:${BUILD_NUMBER}")
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    // Docker Hub에 로그인 후 이미지 푸시, "mydockerhubusername"와 "myapp"를 적절히 변경해야 함
                    docker.withRegistry('https://index.docker.io/v1/', 'DaitdaJenkinscredentialsidDOCKER') {
                        docker.image("DatidaJenkinsDockerapp:${BUILD_NUMBER}").push()
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    // SSH를 사용하여 EC2 인스턴스에서 Docker 컨테이너 실행
                    // "ec2-user@your-ec2-instance-ip"를 EC2 인스턴스의 실제 IP 주소로 변경
                    // 이 단계는 Jenkins가 SSH를 통해 EC2 인스턴스에 접근할 수 있어야 하며,
                    // 필요한 경우 Jenkins 서버의 공개 키를 EC2 인스턴스의 "~/.ssh/authorized_keys"에 추가해야 함
                    sshagent(['DaitdaPrivateKeyId']) {
                        sh "ssh -o StrictHostKeyChecking=no ec2-user@52.78.29.160 'docker run -d -p 80:8080 DatidaJenkinsDockerapp:${BUILD_NUMBER}'"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
        }
    }
}
